#pragma once

#include "items.qh"

float autocvar_g_instagib_invis_alpha;

void instagib_invisibility(entity this);
void instagib_extralife(entity this);
void instagib_speed(entity this);
IntrusiveList g_instagib_items;

REGISTER_MUTATOR(mutator_instagib, autocvar_g_instagib && !g_nexball)
{
	MUTATOR_ONADD
	{
		g_instagib_items = IL_NEW();
		IL_PUSH(g_instagib_items, ITEM_VaporizerCells);
		IL_PUSH(g_instagib_items, ITEM_ExtraLife);
		IL_PUSH(g_instagib_items, ITEM_Invisibility);
		IL_PUSH(g_instagib_items, ITEM_Speed);

		ITEM_VaporizerCells.spawnflags &= ~ITEM_FLAG_MUTATORBLOCKED;
		ITEM_Invisibility.spawnflags &= ~ITEM_FLAG_MUTATORBLOCKED;
		ITEM_Speed.spawnflags &= ~ITEM_FLAG_MUTATORBLOCKED;
	}
	MUTATOR_ONROLLBACK_OR_REMOVE
	{
		ITEM_VaporizerCells.spawnflags |= ITEM_FLAG_MUTATORBLOCKED;
		ITEM_Invisibility.spawnflags |= ITEM_FLAG_MUTATORBLOCKED;
		ITEM_Speed.spawnflags |= ITEM_FLAG_MUTATORBLOCKED;
	}
}
