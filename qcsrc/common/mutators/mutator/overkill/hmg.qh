#pragma once

CLASS(HeavyMachineGun, Weapon)
/* ammotype  */ ATTRIB(HeavyMachineGun, ammo_field, .int, ammo_nails);
/* impulse   */ ATTRIB(HeavyMachineGun, impulse, int, 3);
/* flags     */ ATTRIB(HeavyMachineGun, spawnflags, int, WEP_FLAG_MUTATORBLOCKED | WEP_FLAG_HIDDEN | WEP_FLAG_NORMAL | WEP_FLAG_RELOADABLE | WEP_TYPE_HITSCAN | WEP_FLAG_SUPERWEAPON);
/* rating    */ ATTRIB(HeavyMachineGun, bot_pickupbasevalue, float, 10000);
/* color     */ ATTRIB(HeavyMachineGun, wpcolor, vector, '0.5 0.5 0');
/* modelname */ ATTRIB(HeavyMachineGun, mdl, string, "ok_hmg");
#ifdef GAMEQC
/* model     */ ATTRIB(HeavyMachineGun, m_model, Model, MDL_HMG_ITEM);
#endif
/* crosshair */ ATTRIB(HeavyMachineGun, w_crosshair, string, "gfx/crosshairuzi");
/* crosshair */ ATTRIB(HeavyMachineGun, w_crosshair_size, float, 0.6);
/* wepimg    */ ATTRIB(HeavyMachineGun, model2, string, "weaponhmg");
/* refname   */ ATTRIB(HeavyMachineGun, netname, string, "hmg");
/* wepname   */ ATTRIB(HeavyMachineGun, m_name, string, _("Heavy Machine Gun"));

#define X(BEGIN, P, END, class, prefix) \
	BEGIN(class) \
		P(class, prefix, ammo, float, PRI) \
		P(class, prefix, damage, float, PRI) \
		P(class, prefix, force, float, PRI) \
		P(class, prefix, refire, float, PRI) \
		P(class, prefix, solidpenetration, float, PRI) \
		P(class, prefix, spread_add, float, PRI) \
		P(class, prefix, spread_max, float, PRI) \
		P(class, prefix, spread_min, float, PRI) \
		P(class, prefix, ammo, float, SEC) \
		P(class, prefix, animtime, float, SEC) \
		P(class, prefix, damage, float, SEC) \
		P(class, prefix, delay, float, SEC) \
		P(class, prefix, edgedamage, float, SEC) \
		P(class, prefix, force, float, SEC) \
		P(class, prefix, lifetime, float, SEC) \
		P(class, prefix, radius, float, SEC) \
		P(class, prefix, refire, float, SEC) \
		P(class, prefix, refire_type, float, SEC) \
		P(class, prefix, shotangle, float, SEC) \
		P(class, prefix, speed, float, SEC) \
		P(class, prefix, spread, float, SEC) \
		P(class, prefix, reload_ammo, float, NONE) \
		P(class, prefix, reload_time, float, NONE) \
		P(class, prefix, switchdelay_drop, float, NONE) \
		P(class, prefix, switchdelay_raise, float, NONE) \
		P(class, prefix, weaponreplace, string, NONE) \
		P(class, prefix, weaponstartoverride, float, NONE) \
		P(class, prefix, weaponstart, float, NONE) \
		P(class, prefix, weaponthrowable, float, NONE) \
    END()
    W_PROPS(X, HeavyMachineGun, hmg)
#undef X

ENDCLASS(HeavyMachineGun)
REGISTER_WEAPON(HMG, hmg, NEW(HeavyMachineGun));
