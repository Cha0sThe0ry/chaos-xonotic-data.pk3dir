#pragma once

#include <common/gamemodes/gamemode/lms/lms.qh>
#include <common/mapinfo.qh>

#ifdef CSQC
void HUD_Mod_TTT(vector pos, vector mySize);
#endif
CLASS(TroubleinTerroristTown, Gametype)
    INIT(TroubleinTerroristTown)
    {
        this.gametype_init(this, _("Trouble in Terrorist Town"),"ttt","g_ttt",GAMETYPE_FLAG_USEPOINTS,"","timelimit=30 pointlimit=20",_("A group of space terrorists have traitors among them. Traitors must kill terrorists, while the terrorists have to try to find and kill the traitors"));
    }
    METHOD(TroubleinTerroristTown, m_isAlwaysSupported, bool(Gametype this, int spawnpoints, float diameter))
    {
        return true;
    }
    METHOD(TroubleinTerroristTown, m_isForcedSupported, bool(Gametype this))
    {
        if(!cvar("g_ttt_not_lms_maps"))
        {
            // if this is unset, all LMS maps support TroubleinTerroristTown too
            if(!(MapInfo_Map_supportedGametypes & this.m_flags) && (MapInfo_Map_supportedGametypes & MAPINFO_TYPE_LMS.m_flags))
                return true; // TODO: references another gametype (alternatively, we could check which gamemodes are always enabled and append this if any are supported)
        }
        return false;
    }
#ifdef CSQC
    ATTRIB(TroubleinTerroristTown, m_modicons, void(vector pos, vector mySize), HUD_Mod_TTT);
#endif
ENDCLASS(TroubleinTerroristTown)
REGISTER_GAMETYPE(TTT, NEW(TroubleinTerroristTown));

#ifdef GAMEQC
// shared state signalling the player's ttt status
//TODO: add Detective STATUS and COLOR 20-02-2021
.int ttt_status;
const int TTT_STATUS_INNOCENT = 1;
const int TTT_STATUS_TRAITOR = 2;
const int TTT_STATUS_DETECTIVE = 3;

// hardcoded player colors for ttt
const int TTT_COLOR_DETECTIVE = 221; // blue
const int TTT_COLOR_INNOCENT = 51; // green
const int TTT_COLOR_TRAITOR = 68; // red
#endif
