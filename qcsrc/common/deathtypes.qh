// Deathtypes (weapon deathtypes are the IT_* constants below)
// NOTE: when adding death types, please add an explanation to Docs/spamlog.txt too.
#define DT_FIRST 10000
#define DT_MAX 1024 // limit of recursive functions with ACCUMULATE_FUNCTION
float DT_COUNT;

#define DT_MATCH(a,b) if(min(DT_MAX, a) == b)

#define DEATHTYPE(name,msg_death_by,msg_death,position) \
	float name; \
	float position; \
	void RegisterDeathtype_##name() \
	{ \
		SET_FIRST_OR_LAST(position, DT_FIRST, DT_COUNT) \
		SET_FIELD_COUNT(name, DT_FIRST, DT_COUNT) \
		CHECK_MAX_COUNT(name, DT_MAX, DT_COUNT, "deathtypes") \
	} \
	ACCUMULATE_FUNCTION(RegisterDeathtypes, RegisterDeathtype_##name)

#define DEATHTYPES \
	DEATHTYPE(DEATH_FALL,					NO_MSG, 					DEATH_SELF_FALL, 				DEATH_SPECIAL_START) \
	DEATHTYPE(DEATH_TELEFRAG, 				NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_DROWN, 					NO_MSG, 					DEATH_SELF_DROWN, 				NORMAL_POS) \
	DEATHTYPE(DEATH_HURTTRIGGER, 			NO_MSG, 					DEATH_SELF_CUSTOM, 				NORMAL_POS) \
	DEATHTYPE(DEATH_LAVA, 					NO_MSG, 					DEATH_SELF_LAVA, 				NORMAL_POS) \
	DEATHTYPE(DEATH_SLIME, 					NO_MSG, 					DEATH_SELF_SLIME, 				NORMAL_POS) \
	DEATHTYPE(DEATH_KILL, 					NO_MSG, 					DEATH_SELF_SUICIDE, 			NORMAL_POS) \
	DEATHTYPE(DEATH_NOAMMO, 				NO_MSG, 					DEATH_SELF_NOAMMO, 				NORMAL_POS) \
	DEATHTYPE(DEATH_SWAMP, 					NO_MSG, 					DEATH_SELF_SWAMP, 				NORMAL_POS) \
	DEATHTYPE(DEATH_TEAMCHANGE, 			NO_MSG, 					DEATH_SELF_TEAMCHANGE, 			NORMAL_POS) \
	DEATHTYPE(DEATH_AUTOTEAMCHANGE,			NO_MSG, 					DEATH_SELF_AUTOTEAMCHANGE, 		NORMAL_POS) \
	DEATHTYPE(DEATH_CAMP, 					NO_MSG, 					DEATH_SELF_CAMP, 				NORMAL_POS) \
	DEATHTYPE(DEATH_SHOOTING_STAR,			NO_MSG, 					DEATH_SELF_SHOOTING_STAR, 		NORMAL_POS) \
	DEATHTYPE(DEATH_ROT,					NO_MSG, 					DEATH_SELF_ROT, 				NORMAL_POS) \
	DEATHTYPE(DEATH_MIRRORDAMAGE,			NO_MSG, 					DEATH_SELF_BETRAYAL, 			NORMAL_POS) \
	DEATHTYPE(DEATH_TOUCHEXPLODE,			NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_CHEAT,					NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_FIRE,					NO_MSG, 					DEATH_SELF_FIRE, 				NORMAL_POS) \
	DEATHTYPE(DEATH_VHCRUSH,				NO_MSG, 					NO_MSG, 						DEATH_VHFIRST) \
	DEATHTYPE(DEATH_SBMINIGUN,				NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_SBROCKET,				NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_SBBLOWUP,				NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_WAKIGUN,				NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_WAKIROCKET,				NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_WAKIBLOWUP,				NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_RAPTOR_CANNON,			NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_RAPTOR_BOMB,			NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_RAPTOR_BOMB_SPLIT,		NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_RAPTOR_DEATH,			NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_BUMB_GUN,				NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_BUMB_RAY,				NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_BUMB_RAY_HEAL,			NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_BUMB_DEATH,				NO_MSG, 					NO_MSG, 						DEATH_VHLAST) \
	DEATHTYPE(DEATH_TURRET,					NO_MSG, 					NO_MSG, 						DEATH_TURRET_FIRST) \
	DEATHTYPE(DEATH_TURRET_EWHEEL,			NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_TURRET_FLAC,			NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_TURRET_MACHINEGUN,		NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_TURRET_WALKER_GUN,		NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_TURRET_WALKER_MEELE,	NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_TURRET_WALKER_ROCKET,	NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_TURRET_HELLION,			NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_TURRET_HK,				NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_TURRET_MLRS,			NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_TURRET_PLASMA,			NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_TURRET_PHASER,			NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_TURRET_TESLA,			NO_MSG, 					NO_MSG, 						DEATH_TURRET_LAST) \
	DEATHTYPE(DEATH_GENERIC,				NO_MSG, 					DEATH_SELF_GENERIC, 			NORMAL_POS) \
	DEATHTYPE(DEATH_WEAPON,					NO_MSG, 					NO_MSG, 						NORMAL_POS) \
	DEATHTYPE(DEATH_CUSTOM,					NO_MSG, 					DEATH_SELF_CUSTOM, 				NORMAL_POS)

DEATHTYPES
#undef DEATHTYPE

#define DEATH_ISSPECIAL(t)				((t) >= DEATH_SPECIAL_START)
#define DEATH_ISVEHICLE(t)				((t) >= DEATH_VHFIRST && (t) <= DEATH_VHLAST)
#define DEATH_ISTURRET(t)				((t) >= DEATH_TURRET_FIRST && (t) <= DEATH_TURRET_LAST)
#define DEATH_WEAPONOFWEAPONDEATH(t)	((t) & DEATH_WEAPONMASK)
#define DEATH_ISWEAPON(t,w)				(!DEATH_ISSPECIAL(t) && DEATH_WEAPONOFWEAPONDEATH(t) == (w))
#define DEATH_WEAPONOF(t)				(DEATH_ISSPECIAL(t) ? 0 : DEATH_WEAPONOFWEAPONDEATH(t))
#define WEP_VALID(w)					((w) >= WEP_FIRST && (w) <= WEP_LAST)

string Deathtype_Name(float deathtype)
{
	if(DEATH_ISSPECIAL(deathtype))
	{
		#define DEATHTYPE(name,msg_death_by,msg_death,position) \
			{ if(deathtype == max(0, name)) return VAR_TO_TEXT(name); }

		DEATHTYPES
		#undef DEATHTYPE
	}
	return "foobar";
}

float DEATH_WEAPONMASK = 0xFF;
float DEATH_HITTYPEMASK = 0x1F00; // which is WAY below 10000 used for normal deaths
float HITTYPE_SECONDARY = 0x100;
float HITTYPE_SPLASH = 0x200; // automatically set by RadiusDamage
float HITTYPE_BOUNCE = 0x400;
float HITTYPE_HEADSHOT = 0x800; // automatically set by Damage (if headshotbonus is set)
float HITTYPE_RESERVED = 0x1000; // unused yet

// macros to access these

// CSQC centerprint/notify message types
float MSG_SUICIDE = 0;
float MSG_KILL = 1;
float MSG_SPREE = 2;
float MSG_KILL_ACTION = 3;
float MSG_KILL_ACTION_SPREE = 4;
float MSG_INFO = 5;
float MSG_KA = 6;
float MSG_RACE = 10;

float KILL_TEAM_RED = 12001;
float KILL_TEAM_BLUE = 12002;
float KILL_TEAM_SPREE = 12003;
float KILL_FIRST_BLOOD = 12004;
float KILL_FIRST_VICTIM = 12005;
float KILL_TYPEFRAG = 12006;
float KILL_TYPEFRAGGED = 12007;
float KILL_FRAG = 12008;
float KILL_FRAGGED = 12009;
float KILL_SPREE = 12010;
float KILL_END_SPREE = 12011;
float KILL_SPREE_3 = 12012;
float KILL_SPREE_5 = 12013;
float KILL_SPREE_10 = 12014;
float KILL_SPREE_15 = 12015;
float KILL_SPREE_20 = 12016;
float KILL_SPREE_25 = 12017;
float KILL_SPREE_30 = 12018;



// this shit has got to go
float INFO_GOTFLAG = 13001;
float INFO_PICKUPFLAG = 13002;
float INFO_LOSTFLAG = 13003;
float INFO_RETURNFLAG = 13004;
float INFO_CAPTUREFLAG = 13005;

float KA_PICKUPBALL = 14001;
float KA_DROPBALL = 14002;

float RACE_SERVER_RECORD = 15001;
float RACE_NEW_TIME = 15002;
float RACE_NEW_RANK = 15003;
float RACE_FAIL = 15004;

	/*print("Obituary_Notification(): ", ftos(deathtype), ".\n");
	switch(deathtype)
	{
		// suicide
		case DEATH_AUTOTEAMCHANGE:
		case DEATH_CAMP:
		case DEATH_NOAMMO:
		case DEATH_ROT:
		case DEATH_TEAMCHANGE:
		
		case KILL_TEAM_SUICIDE_RED:
		case KILL_TEAM_SUICIDE_BLUE:

		// murder
		case KILL_TEAM_FRAG_RED:
		case KILL_TEAM_FRAG_BLUE:

		case KILL_FIRST_BLOOD:
		case KILL_FIRST_VICTIM:
		
		case KILL_FRAG:
		case KILL_TYPEFRAG:
		case KILL_FRAGGED:
		case KILL_TYPEFRAGGED:

		// accident
		case WATCH_STEP: 
		
		case DEATH_QUIET: break;

		// ideally we should have ALL deathtypes listed here
		default:
			backtrace(strcat("Unhandled deathtype: ", ftos(deathtype), ". Please notify Samual!\n"));
			break;
	}*/
