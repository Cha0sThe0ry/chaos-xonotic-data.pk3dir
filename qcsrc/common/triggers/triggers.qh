#ifndef TRIGGERS_H
#define TRIGGERS_H

const float SF_TRIGGER_INIT = 1;
const float SF_TRIGGER_UPDATE = 2;
const float SF_TRIGGER_RESET = 4;

const float	SPAWNFLAG_NOMESSAGE = 1;
const float	SPAWNFLAG_NOTOUCH = 1;

.void() trigger_touch;

.float height;

.float nottargeted;
#define IFTARGETED if(!self.nottargeted && self.targetname != "")

.string bgmscript;
.float bgmscriptattack;
.float bgmscriptdecay;
.float bgmscriptsustain;
.float bgmscriptrelease;

.float lip;

void trigger_setnextthink(entity e, float dtime);

// used elsewhere (will fix)
#ifdef SVQC
void trigger_common_write(bool withtarget);

string trigger_magicear_processmessage_forallears(entity source, float teamsay, entity privatesay, string msgin);

void target_voicescript_next(entity pl);
void target_voicescript_clear(entity pl);
#endif

.float volume, atten;

.vector dest;

#ifdef CSQC
void trigger_common_read(bool withtarget);
void trigger_remove_generic();

float WarpZoneLib_ExactTrigger_Touch();
#define EXACTTRIGGER_TOUCH if(WarpZoneLib_ExactTrigger_Touch()) return

.float active;
.string target;
.string targetname;

const int ACTIVE_NOT 		= 0;
const int ACTIVE_ACTIVE 	= 1;
const int ACTIVE_IDLE 		= 2;
const int ACTIVE_BUSY 		= 2;
const int ACTIVE_TOGGLE		= 3;
#endif

#endif
