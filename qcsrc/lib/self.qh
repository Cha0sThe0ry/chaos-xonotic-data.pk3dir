#pragma once

// Transition from global 'self' to local 'this'

// Step 1: auto oldself
#if 1
    #define SELFPARAM() noref const entity this = self
#endif

// Step 2: const self
#if 1
    #define self (0, self)
    [[alias("self")]] entity __self;
    #define setself(s) (__self = s)
    #define WITHSELF(value, block) WITH(entity, __self, value, (0, block))
#endif

// Step 3: propagate SELFPARAM()
#if 1
    #undef self
    #define self (this, self)
    #undef SELFPARAM
    #define SELFPARAM() const entity this = __self
#endif

// Step 4: kill unstructured setself
#if 0
    #undef setself
#endif

// Step 5: this should work
#if 0
    #undef self
    #define self (0, this)
#endif

// Step 6: remove SELFPARAM, add parameters
#if 0
    #undef SELFPARAM
#endif

// Step 7: remove WITHSELF, no replacement
#if 0
    #undef WITHSELF
    #define WITHSELF(value, block) block
#endif

#define SELFWRAP(T, R) \
    [[alias(#T)]] .R() __##T; \
    .R(entity this) self##T; \
    R T##_self() { SELFPARAM(); return this.self##T(this); }

noref entity _selftemp;
#define SELFWRAP_SET(T, e, f) \
    (_selftemp = (e), _selftemp.__##T = T##_self, _selftemp.self##T = f)

SELFWRAP(think, void)
#define setthink(e, f) SELFWRAP_SET(think, e, f)

SELFWRAP(touch, void)
#define settouch(e, f) SELFWRAP_SET(touch, e, f)

SELFWRAP(predraw, void)
#define setpredraw(e, f) SELFWRAP_SET(predraw, e, f)
