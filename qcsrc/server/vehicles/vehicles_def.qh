#define VEHICLES_ENABLED
#ifdef VEHICLES_ENABLED

//#define VEHICLES_VIEWROTATE_CROSSHAIR

#message "with tZork vehicles (experimental)"

float SVC_SETVIEWPORT   = 5;   // Net.Protocol 0x05
float SVC_SETVIEWANGLES = 10;  // Net.Protocol 0x0A
float SVC_UPDATEENTITY  = 128; // Net.Protocol 0x80

.float vehicle_flags;
#define VHF_ISVEHICLE   2
#define VHF_HASSHIELD   4
#define VHF_SHIELDREGEN 8
#define VHF_HEALTHREGEN 16
#define VHF_ENERGYREGEN  32
#define VHF_DEATHEJECT  64
#define VHF_MOVE_GROUND 128
#define VHF_MOVE_HOVER  256
#define VHF_MOVE_FLY    512

.float hud;

.entity gun1;
.entity gun2;

//.entity shield;

.float vehicle_health;
.float vehicle_shield;
.float vehicle_energy;

.float vehicle_ammo1;
.float vehicle_reload1;

.float vehicle_ammo2;
.float vehicle_reload2;

.entity vehicle;
.entity vehicle_viewport;
.entity vehicle_hudmodel;

.float dmg_time;

.float  vehicle_respawntime;
.void() vehicle_spawn;

var .void(float exit_flags) vehicle_exit;
#define VHEF_NORMAL 0
#define VHEF_EJECT  1
#define VHEF_RELESE 2

var .void() vehicle_enter;
var .void() vehicle_die;
var .void() vehicle_spawn;

#endif

void(entity e, float physics_enabled) physics_enable = #540; // enable or disable physics on object
void(entity e, vector force, vector force_pos) physics_addforce = #541; // apply a force from certain origin, length of force vector is power of force
void(entity e, vector torque) physics_addtorque = #542; // add relative torque
