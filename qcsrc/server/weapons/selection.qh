#ifndef SELECTION_H
#define SELECTION_H

#if defined(CSQC)
#elif defined(MENUQC)
#elif defined(SVQC)
    #include "../../common/util-pre.qh"
    #include "../sys-pre.qh"
    #include "../../dpdefs/progsdefs.qc"
    #include "../../dpdefs/dpextensions.qc"
    #include "../sys-post.qh"
    #include "../../warpzonelib/anglestransform.qh"
    #include "../../warpzonelib/mathlib.qh"
    #include "../../warpzonelib/common.qh"
    #include "../../warpzonelib/util_server.qh"
    #include "../../warpzonelib/server.qh"
    #include "../../common/constants.qh"
    #include "../../common/stats.qh"
    #include "../../common/teams.qh"
    #include "../../common/util.qh"
    #include "../../common/nades.qh"
    #include "../../common/buffs.qh"
    #include "../../common/test.qh"
    #include "../../common/counting.qh"
    #include "../../common/urllib.qh"
    #include "../../common/command/markup.qh"
    #include "../../common/command/rpn.qh"
    #include "../../common/command/generic.qh"
    #include "../../common/command/shared_defs.qh"
    #include "../../common/net_notice.qh"
    #include "../../common/animdecide.qh"
    #include "../../common/monsters/monsters.qh"
    #include "../../common/monsters/sv_monsters.qh"
    #include "../../common/monsters/spawn.qh"
    #include "../../common/weapons/config.qh"
    #include "../../common/weapons/weapons.qh"
    #include "accuracy.qh"
    #include "common.qh"
    #include "csqcprojectile.qh"
    #include "hitplot.qh"
#endif

// switch between weapons
void Send_WeaponComplain(entity e, float wpn, float type);

.float hasweapon_complain_spam;
float client_hasweapon(entity cl, float wpn, float andammo, float complain);

.float weaponcomplainindex;
float W_GetCycleWeapon(entity pl, string weaponorder, float dir, float imp, float complain, float skipmissing);

#define w_getbestweapon(ent) W_GetCycleWeapon(ent, ent.cvar_cl_weaponpriority, 0, -1, false, true)

void W_SwitchWeapon_Force(entity e, float w);

// perform weapon to attack (weaponstate and attack_finished check is here)
void W_SwitchToOtherWeapon(entity pl);
void W_SwitchWeapon(float imp);

void W_CycleWeapon(string weaponorder, float dir);

void W_NextWeaponOnImpulse(float imp);

// next weapon
void W_NextWeapon(float list);

// prev weapon
void W_PreviousWeapon(float list);

// previously used if exists and has ammo, (second) best otherwise
void W_LastWeapon(void);
#endif