#ifndef WEAPONSTATS_H
#define WEAPONSTATS_H

#if defined(CSQC)
#elif defined(MENUQC)
#elif defined(SVQC)
    #include "../../common/util-pre.qh"
    #include "../sys-pre.qh"
    #include "../../dpdefs/progsdefs.qc"
    #include "../../dpdefs/dpextensions.qc"
    #include "../sys-post.qh"
    #include "../../warpzonelib/anglestransform.qh"
    #include "../../warpzonelib/mathlib.qh"
    #include "../../warpzonelib/common.qh"
    #include "../../warpzonelib/util_server.qh"
    #include "../../warpzonelib/server.qh"
    #include "../../common/constants.qh"
    #include "../../common/stats.qh"
    #include "../../common/teams.qh"
    #include "../../common/util.qh"
    #include "../../common/nades.qh"
    #include "../../common/buffs.qh"
    #include "../../common/test.qh"
    #include "../../common/counting.qh"
    #include "../../common/urllib.qh"
    #include "../../common/command/markup.qh"
    #include "../../common/command/rpn.qh"
    #include "../../common/command/generic.qh"
    #include "../../common/command/shared_defs.qh"
    #include "../../common/net_notice.qh"
    #include "../../common/animdecide.qh"
    #include "../../common/monsters/monsters.qh"
    #include "../../common/monsters/sv_monsters.qh"
    #include "../../common/monsters/spawn.qh"
    #include "../../common/weapons/config.qh"
    #include "../../common/weapons/weapons.qh"
    #include "accuracy.qh"
    #include "common.qh"
    #include "csqcprojectile.qh"
    #include "hitplot.qh"
    #include "selection.qh"
    #include "spawning.qh"
    #include "throwing.qh"
    #include "tracing.qh"
#endif

float weaponstats_buffer;

void WeaponStats_Init();
void WeaponStats_ready(entity fh, entity pass, float status);
void WeaponStats_Shutdown();
void WeaponStats_LogItem(float awep, float abot, float vwep, float vbot, vector item);
void WeaponStats_LogDamage(float awep, float abot, float vwep, float vbot, float damage);
void WeaponStats_LogKill(float awep, float abot, float vwep, float vbot);

#define WEAPONSTATS_GETINDEX(awep,abot,vwep,vbot) (((vwep) + (awep) * (WEP_LAST - WEP_FIRST + 1) - (WEP_FIRST + WEP_FIRST * (WEP_LAST - WEP_FIRST + 1))) * 4 + (abot) * 2 + (vbot))
#endif