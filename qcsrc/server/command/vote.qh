#define VC_REQUEST_COMMAND 1
#define VC_REQUEST_USAGE 2

#define VC_ASGNMNT_BOTH 1
#define VC_ASGNMNT_CLIENTONLY 2
#define VC_ASGNMNT_SERVERONLY 3

#define VOTE_SELECT_ABSTAIN -2
#define VOTE_SELECT_REJECT -1
#define VOTE_SELECT_NULL 0
#define VOTE_SELECT_ACCEPT 1

string vote_parsed_command;
string vote_parsed_display;

float votecalled;
string votecalledvote;
string votecalledvote_display;
float votecalledmaster;
entity votecaller;
float votefinished;
.float vote_master;
.float vote_next;
.float vote_selection;
float vote_accept_count;
float vote_reject_count;
float vote_abstain_count;
float vote_needed_overall;

string VoteCommand_getname(entity caller);
void VoteCommand(float request, entity caller, float argc, string vote_command);
void VoteHelp(entity e);
void VoteThink();
void VoteReset();
void VoteAccept();
void VoteReject();
void VoteTimeout();
void VoteStop(entity stopper);
void VoteSpam(float notvoters, float mincount, string result);
void VoteCount();

// =========================
//  warmup and nagger stuff
// =========================

#define RESTART_COUNTDOWN 10
entity nagger;
.float ready;
float readycount;
float readyrestart_happened;
float restart_mapalreadyrestarted; // bool, indicates whether reset_map() was already executed
void ReadyCount();