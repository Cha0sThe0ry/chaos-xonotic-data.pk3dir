#pragma once

#include "../gamemode.qh"

void assault_ScoreRules();

REGISTER_MUTATOR(as, false)
{
    MUTATOR_STATIC();
	MUTATOR_ONADD
	{
        GameRules_teams(true);
		assault_ScoreRules();
	}
	return 0;
}

// sprites
.entity assault_decreaser;
.entity assault_sprite;

// legacy bot defs
const int HAVOCBOT_AST_ROLE_NONE = 0;
const int HAVOCBOT_AST_ROLE_DEFENSE = 2;
const int HAVOCBOT_AST_ROLE_OFFENSE = 4;

.int havocbot_role_flags;
.float havocbot_attack_time;

.void(entity this) havocbot_role;
.void(entity this) havocbot_previous_role;

void(entity this) havocbot_role_ast_defense;
void(entity this) havocbot_role_ast_offense;

void(entity bot) havocbot_ast_reset_role;

void(entity this, float ratingscale, vector org, float sradius) havocbot_goalrating_items;
void(entity this, float ratingscale, vector org, float sradius) havocbot_goalrating_enemyplayers;

// scoreboard stuff
const float ST_ASSAULT_OBJECTIVES = 1;

// predefined spawnfuncs
void target_objective_decrease_activate(entity this);
