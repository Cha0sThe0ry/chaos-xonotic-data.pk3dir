// these are needed since mutators are compiled last

// used in cheats.qc
void ctf_RespawnFlag(entity flag)

// used in t_quake3.qc
void spawnfunc_info_player_team1();
void spawnfunc_info_player_team2();
void spawnfunc_info_player_team3();
void spawnfunc_info_player_team4();
void spawnfunc_item_flag_team1();
void spawnfunc_item_flag_team2();
void spawnfunc_ctf_team();

// flag constants // for most of these, there is just one question to be asked: WHYYYYY?
#define FLAG_MIN (PL_MIN + '0 0 -13')
#define FLAG_MAX (PL_MAX + '0 0 -13')

#define FLAG_SCALE 0.6

#define FLAG_THINKRATE 0.2
#define FLAG_TOUCHRATE 0.5
#define WPFE_THINKRATE 0.5

#define FLAG_DROP_OFFSET ('0 0 32')
#define FLAG_CARRY_OFFSET ('-16 0 8')
#define FLAG_SPAWN_OFFSET ('0 0 1' * (PL_MAX_z - 13))
#define FLAG_WAYPOINT_OFFSET ('0 0 64')
#define FLAG_FLOAT_OFFSET ('0 0 32')

#define VEHICLE_FLAG_OFFSET ('0 0 96')
#define VEHICLE_FLAG_SCALE 1.0

// waypoint colors
#define WPCOLOR_ENEMYFC(t) (colormapPaletteColor(t - 1, FALSE) * 0.75)
#define WPCOLOR_FLAGCARRIER(t) ('0.8 0.8 0')
#define WPCOLOR_DROPPEDFLAG(t) (('0.25 0.25 0.25' + colormapPaletteColor(t - 1, FALSE)) * 0.5)

// sounds 
#define snd_flag_taken noise
#define snd_flag_returned noise1
#define snd_flag_capture noise2
#define snd_flag_respawn noise3
.string snd_flag_dropped;
.string snd_flag_touch;
.string snd_flag_pass;

// effects
.string toucheffect;
.string passeffect;

// list of flags on the map
entity ctf_worldflaglist;
.entity ctf_worldflagnext;
.entity ctf_staleflagnext;

// waypoint sprites
.entity bot_basewaypoint; // flag waypointsprite
.entity wps_helpme;
.entity wps_flagbase; 
.entity wps_flagcarrier;
.entity wps_flagdropped;
.entity wps_enemyflagcarrier;
float wpforenemy_announced;
float wpforenemy_nextthink;

// statuses
#define FLAG_BASE 1
#define FLAG_DROPPED 2
#define FLAG_CARRY 3
#define FLAG_PASSING 4

#define DROP_NORMAL 1
#define DROP_THROW 2
#define DROP_PASS 3
#define DROP_RESET 4

#define PICKUP_BASE 1
#define PICKUP_DROPPED 2

#define CAPTURE_NORMAL 1
#define CAPTURE_DROPPED 2

#define RETURN_TIMEOUT 1
#define RETURN_DROPPED 2
#define RETURN_DAMAGE 3
#define RETURN_SPEEDRUN 4
#define RETURN_NEEDKILL 5

// flag properties
#define ctf_spawnorigin dropped_origin
float ctf_stalemate; // indicates that a stalemate is active
float ctf_captimerecord; // record time for capturing the flag
.float ctf_pickuptime;
.float ctf_droptime;
.float ctf_status; // status of the flag (FLAG_BASE, FLAG_DROPPED, FLAG_CARRY declared globally)
.entity ctf_dropper; // don't allow spam of dropping the flag
.float max_flag_health;
.float next_take_time;

// passing properties
.entity pass_sender;
.entity pass_target;
.float throw_antispam;

// CaptureShield: If the player is too bad to be allowed to capture, shield them from taking the flag.
.float ctf_captureshielded; // set to 1 if the player is too bad to be allowed to capture
float ctf_captureshield_min_negscore; // punish at -20 points
float ctf_captureshield_max_ratio; // punish at most 30% of each team
float ctf_captureshield_force; // push force of the shield
