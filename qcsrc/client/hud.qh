vector mousepos;
vector panel_click_distance; // mouse cursor distance from the top left corner of the panel (saved only upon a click)
vector panel_click_resizeorigin; // coordinates for opposite point when resizing
float resizeCorner; // 1 = topleft, 2 = topright, 3 = bottomleft, 4 = bottomright
float highlightedPanel;
float highlightedPanel_prev;
float highlightedAction; // 0 = nothing, 1 = move, 2 = resize

const float BORDER_MULTIPLIER = 0.25;
float hud_color_bg_team;
float scoreboard_bottom;
float weapon_hits[WEP_MAXCOUNT];
float weapon_fired[WEP_MAXCOUNT];
float weapon_number;

float complain_weapon;
string complain_weapon_name;
float complain_weapon_type;
float complain_weapon_time;

float ps_primary, ps_secondary;
float ts_primary, ts_secondary;

float last_weapon;
float weapontime;

float teamnagger;
float hud_fg_alpha;
float hud_accuracy_hud;
float hud_border_thickness;
float hud_accuracy_border_thickness;

float hud_configure;
float hud_configure_checkcollisions;
float hud_configure_prev;

float hudShiftState;
const float S_SHIFT = 1;
const float S_CTRL = 2;
const float S_ALT = 4;

float disable_menu_alphacheck; // 0 = enable alpha check, 1 = disable for entire hud, 2 = disable for one panel
float menu_fade_alpha;

string hud_skin_path;

var string panel_name;

var float panel_enabled; 
var vector panel_pos; 
var vector panel_size; 
var string panel_bg; 
var vector panel_bg_color; 
var string panel_bg_color_team; 
var string panel_bg_alpha; 
var string panel_bg_border; 
var string panel_bg_padding; 
var float panel_accuracy_yellow; 
var float panel_accuracy_onlycurrent; 
var float panel_accuracy_flip; 
var float panel_accuracy_iconalign; 
var float panel_accuracy_baralign; 
var float panel_accuracy_info_top; 
var float panel_accuracy_foreground_alpha; 
var float panel_accuracy_alreadyvoted_alpha; 

// Get name of specified panel id
#define HUD_Panel_GetName(id) \
switch(id) { \
	case HUD_PANEL_WEAPONICONS: panel_name = HUD_PANELNAME_WEAPONICONS; return; \
	case HUD_PANEL_INVENTORY: panel_name = HUD_PANELNAME_INVENTORY; return; \
	case HUD_PANEL_POWERUPS: panel_name = HUD_PANELNAME_POWERUPS; return; \
	case HUD_PANEL_HEALTHARMOR: panel_name = HUD_PANELNAME_HEALTHARMOR; return; \
	case HUD_PANEL_NOTIFY: panel_name = HUD_PANELNAME_NOTIFY; return; \
	case HUD_PANEL_TIMER: panel_name = HUD_PANELNAME_TIMER; return; \
	case HUD_PANEL_RADAR: panel_name = HUD_PANELNAME_RADAR; return; \
	case HUD_PANEL_SCORE: panel_name = HUD_PANELNAME_SCORE; return; \
	case HUD_PANEL_RACETIMER: panel_name = HUD_PANELNAME_RACETIMER; return; \
	case HUD_PANEL_VOTE: panel_name = HUD_PANELNAME_VOTE; return; \
	case HUD_PANEL_MODICONS: panel_name = HUD_PANELNAME_MODICONS; return; \
	case HUD_PANEL_PRESSEDKEYS: panel_name = HUD_PANELNAME_PRESSEDKEYS; return; \
	case HUD_PANEL_CHAT: panel_name = HUD_PANELNAME_CHAT; return; \
	case HUD_PANEL_ENGINEINFO: panel_name = HUD_PANELNAME_ENGINEINFO; return; \
}

// Update all cvars of given panel
#define HUD_Panel_UpdateCvars(name) \
panel_enabled = autocvar_hud_##name; \
panel_pos = autocvar_hud_##name_pos; \
panel_size = autocvar_hud_##name_size; \
panel_bg = autocvar_hud_##name_bg; \
panel_bg_color = autocvar_hud_##name_bg_color; \
panel_bg_color_team = autocvar_hud_##name_bg_color_team; \
panel_bg_alpha = autocvar_hud_##name_bg_alpha; \
panel_bg_border = autocvar_hud_##name_bg_border; \
panel_bg_padding = autocvar_hud_##name_bg_padding; \
panel_accuracy_yellow = autocvar_hud_##name_accuracy_yellow; \
panel_onlycurrent = autocvar_hud_##name_onlycurrent; \
panel_flip = autocvar_hud_##name_flip; \
panel_iconalign = autocvar_hud_##name_iconalign; \
panel_baralign = autocvar_hud_##name_baralign; \
panel_info_top = autocvar_hud_##name_info_top; \
panel_alreadyvoted_alpha = autocvar_hud_##name_alreadyvoted_alpha;
