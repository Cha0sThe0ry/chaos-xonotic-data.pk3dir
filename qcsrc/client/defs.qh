#pragma once

// Additional OPTIONAL Fields and Globals
//float		intermission;
// float		coop;
// float		deathmatch;

float		dmg_take;
// float		dmg_save;
// vector		dmg_origin;

// Darkplaces Render Modifications
#if 0
.float alpha;
.vector colormod;
.float scale;
#endif

// Basic variables
.int enttype; // entity type sent from server
.int sv_entnum; // entity number sent from server
.int team;
.int team_size;

float vid_conheight;
int binddb;

// Spectating
// -1 - observing
// 0 - playing
// >0 - id of spectated player
float spectatee_status;
float spectatee_status_changed_time;

// short mapname
string shortmapname;

// database for misc stuff
int tempdb;
int ClientProgsDB;
vector hook_shotorigin[4];
vector lightning_shotorigin[4];


#ifdef BLURTEST
float blurtest_time0, blurtest_time1, blurtest_radius, blurtest_power;
#endif

float serverprevtime, serverdeltatime;

float ticrate;

.float damageforcescale;
const float MIN_DAMAGEEXTRARADIUS = 2;
const float MAX_DAMAGEEXTRARADIUS = 16;
.float damageextraradius;
.void(entity this, float thisdmg, int hittype, vector org, vector thisforce) event_damage;

// weapons
.bool silent;

int w_deathtype;
float w_issilent, w_random;
vector w_org, w_backoff;

float bgmtime;

float vortex_charge_movingavg;

int serverflags;

float uid2name_dialog;

float intermission_time;

.bool csqcmodel_isdead; // used by shownames and miscfunctions (entcs_IsDead) to know when a player is dead

#define player_currententnum (spectatee_status > 0 ? spectatee_status : player_localnum + 1)
